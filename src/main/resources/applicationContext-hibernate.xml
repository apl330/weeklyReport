<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- SessionFactory, DataSource, etc. omitted -->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="10" />

		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="100" />

		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="10" />

		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />

		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。 
			所以设置这个参数需要考虑到多方面的因素。 如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 
			0 -->
		<property name="maxStatements" value="0" />

		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />

		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />

		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取 
			连接。如果设为true，那么在尝试 获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure" value="false" />

		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.dayatang.weekly.domain</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>hibernate.dialect=${hibernate.dialect}</value>
		</property>
	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="appOperation"
			expression="execution(* com.dayatang.weekly.application.ReportApplication.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="appOperation" />
	</aop:config>

	<aop:config>
		<aop:pointcut id="securityOperation"
			expression="execution(* com.dayatang.weekly.application.SecurityApplication.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="securityOperation" />
	</aop:config>

	<bean id="repository"
		class="com.dayatang.spring.repository.EntityRepositoryHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="reportApplication"
		class="com.dayatang.weekly.application.impl.ReportApplicationImpl">
	</bean>

	<bean id="securityApplication"
		class="com.dayatang.weekly.application.impl.SecurityApplicationImpl">
	</bean>

	<bean id="userHolder" class="com.dayatang.weekly.service.UserHolderImpl"
		scope="prototype" />

  <bean id="configureService" class="com.dayatang.utils.ConfigurationFileImpl"
		factory-method="fromClasspath">
		<constructor-arg value="/conf.properties" />
	</bean>
</beans>
